@page "/Articulos/Delete"
@page "/Articulos/Delete/{ArticuloId:int}"
@inject ArticulosService ArticuloService
@inject NavigationManager navigationManager
@rendermode InteractiveServer
@inject IJSRuntime IJSRuntime

<PageTitle>Eliminar Articulos</PageTitle>

<div class="container">
    <div class="card shadow-header">
        <div class="card-header text-center py-2 rounded">
            <h3><strong>Eliminar Articulos</strong></h3>
        </div>
        <Toasts class="p-3" Messages="MensajeToast" Placement="ToastsPlacement.TopRight" />
        <div class="card-header">
            <h3 class="text-danger">¿Estás seguro de que quieres eliminar este Articulo?</h3>
        </div>

        @if (Articulo != null)
        {
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card shadow-lg">
                            <div class="card-header">
                                <h3 class="text-center"><strong>Datos del Articulo</strong></h3>
                            </div>
                            <div class="card-body">
                                <div class="border-primary border-2 borde">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-8">
                                                <ul class="list-unstyled">
                                                    <li><strong>ArticuloId:</strong> @Articulo.ArticuloId</li>
                                                    <li><strong>Descripcion:</strong> @Articulo.Descripcion</li>
                                                    <li><strong>Ganancia:</strong> @Articulo.Ganancia</li>
                                                    <li><strong>Costo:</strong> @Articulo.Costo</li>
                                                    <li><strong>Precio:</strong> @Articulo.Precio</li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="card-footer">
           

            <button class="btn btn-outline-primary" @onclick="EliminarMeta"><Icon Name="IconName.Trash" /> Eliminar</button>
            <button class="btn btn-outline-secondary" @onclick="Volver"><Icon Name="IconName.Arrow90DegLeft" /> Volver</button>

        </div>
    </div>
</div>

@if (Articulo == null)
{
    <A>Articulo no encontrado.</A>
}

@code {
    [Parameter]
    public int ArticuloId { get; set; }
    public Articulos? Articulo{ get; set; } // Cambiado a permitir nulos
    List<ToastMessage> MensajeToast = new List<ToastMessage>();

    protected override async Task OnInitializedAsync()
    {
        if (ArticuloId != 0)
        {
            Articulo = await ArticuloService.Buscar(ArticuloId);
        }
        else
        {
            Console.WriteLine("El ArticuloId es igual a 0");
        }
    }

    public async Task EliminarMeta()
    {
        if (ArticuloId == 0 || Articulo == null)
        {
            Console.Write("El articulo es igual a 0");
            return; // Salir del método si el TecnicoId es inválido
        }

        Console.WriteLine("Eliminando El Articulo...");

        if (await ArticuloService.Eliminar(ArticuloId))
        {
            Mensaje(ToastType.Success, "Eliminado correctamente El Articulo.");

        }
        else
        {
            Mensaje(ToastType.Danger, "Error al eliminar  El Articulo.");

        }
    }

    public async Task Volver()
    {
        navigationManager.NavigateTo("/Articulos/Index");
    }

    private ToastMessage CreateToastMessage(ToastType toastType, string mensaje)
    => new ToastMessage
        {
            Type = toastType,
            Title = "Notificación",
            HelpText = $"{DateTime.Now}",
            Message = mensaje,
        };

    private void Mensaje(ToastType toastType, string mensaje)
    {
        MensajeToast.Add(CreateToastMessage(toastType, mensaje));
    }
}
